import gql from 'graphql-tag';
import { getAsObject } from '@base-cms/object-path';
import queryFragment from '../../../api/fragments/magazine-issue-list';

$ const pageNumber = input.pageNumber || 1;
$ const { publicationId } = getAsObject(input, 'query');

$ const block = 'magazine-active-issues';
$ const query = {
  publicationId,
  limit: 12,
  ...input.query,
  queryFragment,
};

$ const loadMore = {
  ...input.loadMore,
};

$ const adCardInput = {
  name: 'load-more',
  size: [300, 250],
  modifiers: ['in-card'],
  ...getAsObject(input, 'ads.card'),
};

<cms-query-magazine-active-issues|{ nodes, pageInfo }| ...query>
  $ const { endCursor, hasNextPage } = pageInfo;
  $ delete query.skip;
  $ delete query.queryFragment;
  $ delete query.renderBody;
  $ query.after = endCursor;
  $ const provide = {
    query,
    pageNumber,
    ads: input.ads,
  };

  <div class=block>
    <div class="row">
      <cms-gtm-track-inview-event name="page_load" vars={ page_number: pageNumber + 1 } />
      <for|issue, index| of=nodes>
        <div class=`${block}__col`>
          <endeavor-magazine-issue-item
            issue=issue
            image-modifiers=["fluid", "3by4"]
            image-options={ w: 630, h: 840, fit: "crop", crop: "focalpoint", fpX: 0.5, fpY: 0.5 }
            image-position="top"
            modifiers=["card"]
            with-header=false
            with-footer=false
          />
        </div>
      </for>
    </div>
  </div>

  <endeavor-load-more-button
    append-to=".container-fluid-max"
    block-name=block
    label="Load More Issues"
    max-pages=loadMore.maxPages
    page-number=pageNumber
    provide=provide
    show=hasNextPage
  />
</cms-query-magazine-active-issues>
