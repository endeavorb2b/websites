import { asArray } from '@base-cms/utils';
import { getAsObject } from '@base-cms/object-path';
import { buildImgixUrl } from '@base-cms/image';
import contentListFragment from '../../../api/fragments/content-list';
import { useNativeX } from '../../../services/native-x';

$ const { site } = out.global;
$ const block = 'content-query-feed';
$ const params = {
  limit: 10,
  ...input,
  queryFragment: contentListFragment,
  queryName: 'QueryFeed',
};
$ const nativeX = getAsObject(input, 'nativeX');
$ const nativeXEnabled = useNativeX(site, {
  name: nativeX.placement,
  index: nativeX.index,
  aliases: nativeX.aliases,
});
$ const imageOptions = { w: 120, h: 120, fit: 'crop', crop: 'focalpoint', fpX: 0.5, fpY: 0.5 };
$ const withImage = input.withImage === undefined ? true : Boolean(input.withImage);
$ const withSection = input.withSection === undefined ? true : Boolean(input.withSection);
$ const imageUsePlaceholder = input.usePlaceholder === undefined ? true : Boolean(input.usePlaceholder);

<cms-query-website-scheduled-content|{ nodes, pageInfo }| ...params>
  $ const listNodes = asArray(nodes);
  <if(listNodes.length)>
    <div class=block>
      <endeavor-item-list flush=true card=true items=listNodes>
        <if(input.header)>
          <@header>
            ${input.header}
          </@header>
        </if>
        <@item|{ item, index }|>
          <endeavor-content-nativex-item
            placement=nativeX.placement
            aliases=nativeX.aliases
            index=nativeX.index
            current-index=index
            item={
              content: item,
              imageHeight: 75,
              imageOptions,
              imagePosition: "right",
              imageUsePlaceholder,
              imageWidth: 75,
              withImage,
              withSection,
            }
          />
        </@item>
      </endeavor-item-list>
    </div>
  </if>
</cms-query-website-scheduled-content>
